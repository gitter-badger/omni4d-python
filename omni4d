#!/usr/bin/env python
"""Omni4d
Usage:
    omni4d create -t DBMS [-l LOGGING] [-v VERBOSITY] [-d DBNAME] [-s SERVER] [-n PORT] [-u USER] [-p PASSWORD]
    omni4d import -t DBMS [-l LOGGING] [-v VERBOSITY] [-d DBNAME] [-s SERVER] [-n PORT] [-u USER] [-p PASSWORD] -f URL
    omni4d -h | --help
    omni4d --version

Options:
    -l --logging LOGGING       Logging destination (console, file or none) [default: console]
    -v --verbosity VERBOSITY   Logging verbosity [default: info]
    -t --dbms                  DBMS Type (orientdb, sql)
    -f --url URL               Url of model file to import
    -d --dbname DBNAME         [default: omni4d]
    -s --server SERVER         Server name or ip address [default: localhost]
    -n --port PORT             Port number for server [default: 2424]
    -u --user USER             DBMS user [default: admin]
    -p --password PASSWORD     DBMS password [default: admin]
    -h --help                  Show a help message
    --version                  Show the version
"""
from docopt import docopt
import importlib
from omni4d_python.model import model_from_url
from omni4d_python.session import setup_logging

if __name__ == '__main__':

    arguments = docopt(__doc__, version='Omni4d 0.0.1')

    logging_args = {
        'logging_destination': arguments['--logging'],
        'verbosity': arguments['--verbosity']
    }
    logger = setup_logging(**logging_args)
    logger.debug('arguments: %s' % arguments)

    imports = {
        'orientdb': 'omni4d_python.orient',
        'sql': 'omni4d_python.sql'
    }
    dbms = importlib.import_module(imports[arguments['DBMS']])

    command_args = {
        'db_name': arguments['--dbname'],
        'server': arguments['--server'],
        'port': int(arguments['--port']),
        'user': arguments['--user'],
        'password': arguments['--password']
    }

    if arguments['create']:
        dbms.create_db(**command_args)

    if arguments['import']:
        command_args['model'] = model_from_url(arguments['--url'])
        dbms.import_model(**command_args)
